{"version":3,"sources":["views/Questions/Sections/Q1.jsx"],"names":["Q1","saveData","values","localStorage","setItem","first_name","middle_name","last_name","jwt","getItem","config","headers","Authorization","axios","post","REMOTE_HOST","bucket","fileName","fileType","then","response","console","log","signedRequest","data","put","result","memoryName","imgID","catch","error","JSON","stringify","props","next","inputStyle","borderRadius","textAlign","fontSize","border","width","height","margin","navButton","style","className","marginBottom","onFinish","this","scrollToFirstError","display","justifyContent","flexFlow","Item","name","rules","required","message","placeholder","type","onClick","prev","htmlType","React","Component"],"mappings":"0PAKqBA,E,4MACjBC,SAAW,SAAAC,GAEPC,aAAaC,QAAQ,aAAcF,EAAOG,YAC1CF,aAAaC,QAAQ,cAAeF,EAAOI,aAC3CH,aAAaC,QAAQ,YAAaF,EAAOK,WAEzC,IAAMC,EAAML,aAAaM,QAAQ,SAC3BC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,KAGjCK,IAAMC,KAAKC,cAAc,qBAAqB,CAC1CC,OAAS,wBACTC,SAAW,YACXC,SAAW,OACZR,GACFS,MAAK,SAAAC,GACFC,QAAQC,IAAI,aACZD,QAAQC,IAAIF,GACZ,IACIG,EADaH,EAASI,KACKD,cAC/BF,QAAQC,IAAI,6BAA+BC,GAQ3CV,IAAMY,IAAIF,EAAcpB,aAAaM,QAAQ,cAL/B,CACNE,QAAS,CACL,eAAgB,SAI3BQ,MAAK,SAAAO,GAEFb,IAAMC,KAAKC,cAAc,gBAAiB,CACtCY,WAAY,YACZC,MAAO,iBACRlB,GACFS,MAAM,SAAAO,GACHL,QAAQC,IAAII,MACbG,OAAM,SAAAC,GACLT,QAAQC,IAAI,SAAWS,KAAKC,UAAUF,UAG7CD,OAAM,SAAAC,GACHT,QAAQC,IAAI,SAAWS,KAAKC,UAAUF,UAG7CD,OAAM,SAAAC,GACHT,QAAQC,IAAIS,KAAKC,UAAUF,OAG/B,EAAKG,MAAMC,Q,uDAIX,IAAMC,EAAa,CACfC,aAAc,OACdC,UAAW,SACXC,SAAU,OACVC,OAAQ,oBACRC,MAAO,QACPC,OAAO,OACPC,OAAQ,aAaNC,EAAY,CACdP,aAAc,OACdM,OAAQ,OACRF,MAAO,SAGX,OACI,yBAAKI,MAAO,CAACJ,MAAO,OAAQH,UAAW,WACnC,yBAAKQ,UAAU,cAAcD,MAAO,CAACN,SAAU,QAASQ,aAAc,QAAtE,kCAGA,kBAAC,IAAD,CACIC,SAAUC,KAAK/C,SACfgD,oBAAkB,GAClB,yBAAKL,MAAO,CAACM,QAAS,OAAQC,eAAgB,SAAUC,SAAU,aAC9D,kBAAC,IAAKC,KAAN,CAAWC,KAAK,aACLC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,6BAGxB,kBAAC,IAAD,CAAOC,YAAY,aAAad,MAAOT,KAE3C,kBAAC,IAAKkB,KAAN,CAAWC,KAAK,eACZ,kBAAC,IAAD,CAAOI,YAAY,cAAcd,MAAOT,KAE5C,kBAAC,IAAKkB,KAAN,CAAWC,KAAK,aACZ,kBAAC,IAAD,CAAOI,YAAY,YAAYd,MAAOT,KAE1C,kBAAC,IAAKkB,KAAN,CAAWC,KAAK,UACZ,kBAAC,IAAD,CAAOI,YAAY,SAASd,MAzC5B,CAChBR,aAAc,OACdC,UAAW,SACXC,SAAU,OACVC,OAAQ,oBACRC,MAAO,QACPC,OAAO,OACPC,OAAQ,iBAsCA,yBAAKE,MAAO,CAACM,QAAS,OAAQC,eAAgB,WAC1C,kBAAC,IAAD,CAAQQ,KAAK,UAAUC,QAASZ,KAAKf,MAAM4B,KAAMjB,MAAOD,GAAxD,QACA,kBAAC,IAAKU,KAAN,KACI,kBAAC,IAAD,CAAQM,KAAK,UAAUG,SAAS,SAASlB,MAAOD,GAAhD,gB,GAlHIoB,IAAMC","file":"static/js/167.64b3f912.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, Form, Input} from \"antd\";\nimport axios from \"axios\";\nimport { REMOTE_HOST } from \"../../../constants.js\"\n\nexport default class Q1 extends React.Component {\n    saveData = values => {\n        // console.log('Received values of form: ', values);\n        localStorage.setItem(\"first_name\", values.first_name);\n        localStorage.setItem(\"middle_name\", values.middle_name);\n        localStorage.setItem(\"last_name\", values.last_name);\n\n        const jwt = localStorage.getItem(\"token\");\n        const config = {\n            headers: {\n                Authorization: `Bearer ${jwt}`,\n            }\n        }\n        axios.post(REMOTE_HOST + \"/aws/signS3_upload\",{\n            bucket : \"resteasy-user-uploads\",\n            fileName : \"firstname\",\n            fileType : \"txt\"\n        }, config)\n        .then(response => {\n            console.log(\"---------\")\n            console.log(response)\n            var returnData = response.data\n            var signedRequest = returnData.signedRequest;\n            console.log(\"Recieved a signed request \" + signedRequest);\n        \n            // Put the fileType in the headers for the upload\n            var options = {\n                    headers: {\n                        'Content-Type': \"txt\"\n                    }\n            };\n            axios.put(signedRequest,localStorage.getItem(\"first_name\"),options)\n            .then(result => {\n                // upon successful upload, add the file data into the userImages index in mongoDB\n                axios.post(REMOTE_HOST + \"/aws/addImgDB\", {\n                    memoryName: \"firstname\",\n                    imgID: \"firstname.txt\"\n                }, config)\n                .then( result => {\n                    console.log(result)\n                }).catch(error => {\n                    console.log(\"error \" + JSON.stringify(error))\n                })\n            })\n            .catch(error => {\n                console.log(\"ERROR \" + JSON.stringify(error));\n            })\n        })\n        .catch(error => {\n            console.log(JSON.stringify(error));\n        })\n\n        this.props.next();\n    };\n\n    render() {\n        const inputStyle = {\n            borderRadius: \"12px\",\n            textAlign: \"center\",\n            fontSize: \"17px\",\n            border: \"1px solid #578C3D\",\n            width: \"235px\",\n            height:\"40px\",\n            margin: \"20px 10px\"\n        }\n\n        const suffixStyle = {\n            borderRadius: \"12px\",\n            textAlign: \"center\",\n            fontSize: \"17px\",\n            border: \"1px solid #578C3D\",\n            width: \"150px\",\n            height:\"40px\",\n            margin: \"20px 10px\"\n        }\n\n        const navButton = {\n            borderRadius: \"10px\",\n            margin: \"10px\",\n            width: \"100px\"\n        }\n\n        return (\n            <div style={{width: \"100%\", textAlign: \"center\"}}>\n                <div className=\"create-text\" style={{fontSize: \"1.5em\", marginBottom: \"2em\"}}>\n                    What is your loved one's name?\n                </div>\n                <Form\n                    onFinish={this.saveData}\n                    scrollToFirstError>\n                    <div style={{display: \"flex\", justifyContent: \"center\", flexFlow: \"row wrap\"}}>\n                        <Form.Item name=\"first_name\"\n                                   rules={[\n                                       {\n                                           required: true,\n                                           message: 'Please input first name',\n                                       },\n                                   ]}>\n                            <Input placeholder=\"First name\" style={inputStyle}/>\n                        </Form.Item>\n                        <Form.Item name=\"middle_name\">\n                            <Input placeholder=\"Middle name\" style={inputStyle}/>\n                        </Form.Item>\n                        <Form.Item name=\"last_name\">\n                            <Input placeholder=\"Last name\" style={inputStyle}/>\n                        </Form.Item>\n                        <Form.Item name=\"suffix\">\n                            <Input placeholder=\"Suffix\" style={suffixStyle}/>\n                        </Form.Item>\n                    </div>\n\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Button type=\"primary\" onClick={this.props.prev} style={navButton}>Back</Button>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" style={navButton}>Next</Button>\n                        </Form.Item>\n                    </div>\n                </Form>\n            </div>);\n    }\n}\n"],"sourceRoot":""}