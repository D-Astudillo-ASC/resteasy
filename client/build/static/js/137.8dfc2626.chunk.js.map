{"version":3,"sources":["views/Questions/Sections/Q4.jsx"],"names":["Q4","handleClick","state","secondService","setState","callbackFunc","autoCompleteData","localStorage","setItem","callbackFuncSec","saveData","values","date","time","location","description","date_two","time_two","location_two","description_two","props","next","bind","inputStyle","borderRadius","textAlign","fontSize","border","width","height","margin","navButton","secondForm","this","style","display","justifyContent","marginTop","Item","name","placeholder","padding","apiKey","constants","id","fields","streetAddress","streetAddress2","locality","cityOrState","postalcode","country","callbackFunctionSecond","TextArea","whiteSpace","type","onClick","marginLeft","marginBottom","className","onFinish","scrollToFirstError","key","callbackFunction","prev","htmlType","React","Component"],"mappings":"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","file":"static/js/137.8dfc2626.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button, DatePicker, Form, Input, TimePicker} from \"antd\";\nimport GoogleAutoComplete from 'react-auto-complete-address-fields';\nimport './GoogleAutoComplete.css';\nimport \"../Questions.css\"\nimport * as constants from \"../../../constants\";\n\nexport default class Q4 extends React.Component {\n\n    constructor()  {\n        super();\n        this.state = {\n            secondService: false,\n        }\n        this.callbackFunc = this.callbackFunc.bind(this);\n        this.callbackFuncSec = this.callbackFuncSec.bind(this);\n\n    }\n    \n    handleClick = () => {\n        if(this.state.secondService){\n            this.setState({\n                secondService: false,\n            })\n        } else {\n            this.setState({\n                secondService: true,\n            })\n        }\n    }\n\n\tcallbackFunc  = ( autoCompleteData ) => {\n        //You can use the address data, passed by autocomplete as you want.\n        localStorage.setItem(\"service_location\", autoCompleteData);\n    }\n    \n    callbackFuncSec  = ( autoCompleteData ) => {\n        //You can use the address data, passed by autocomplete as you want.\n        localStorage.setItem(\"service_location_two\", autoCompleteData);\n\t}\n\n    saveData = values => {\n        localStorage.setItem(\"date\", values.date);\n        localStorage.setItem(\"time\", values.time);\n        localStorage.setItem(\"location\", values.location);\n        localStorage.setItem(\"description\", values.description);\n\n        localStorage.setItem(\"date_two\", values.date_two);\n        localStorage.setItem(\"time_two\", values.time_two);\n        localStorage.setItem(\"location_two\", values.location_two);\n        localStorage.setItem(\"description_two\", values.description_two);\n        this.props.next();\n    };\n\n    render() {\n        const inputStyle = {\n            borderRadius: \"12px\",\n            textAlign: \"center\",\n            fontSize: \"17px\",\n            border: \"1px solid #578C3D\",\n            width: \"235px\",\n            height:\"40px\",\n            margin: \"10px\"\n        }\n\n        const navButton = {\n            borderRadius: \"10px\",\n            margin: \"10px\",\n            width: \"100px\"\n        }\n\n        const secondForm = (this.state.secondService ? \n                <div>\n                    \n                    <hr style={{width: \"100%\"}}/>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"40px\"}}>\n                        <Form.Item name=\"date_two\">\n                            <DatePicker placeholder=\"Date\" style={inputStyle} />\n                        </Form.Item>\n                        <Form.Item style={{ margin: \"0em 2em\" }} name=\"time_two\">\n                            <TimePicker placeholder=\"Time\" style={inputStyle} />\n                        </Form.Item>\n                    </div>\n\n                    <GoogleAutoComplete style={{ width: \"50px\", height: \"50px\", padding: \"0px\" }}\n                        apiKey={constants.GOOGLE_MAPS_KEY}\n                        id='location'\n                        fields={{\n                            streetAddress: \"route_two\",\n                            streetAddress2: \"administrative_area_level_4_two\",\n                            locality: \"locality_two\",\n                            cityOrState: \"administrative_area_level_1_two\",\n                            postalcode: \"postal_code_two\",\n                            country: \"country_two\"\n                        }}\n                        callbackFunctionSecond={this.callbackFuncSec}\n                    />\n\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <Form.Item name=\"description_two\">\n                            <Input.TextArea placeholder=\"Description/Details\" style={{ width: \"34em\", height: \"10em\", borderRadius: \"10px\", whiteSpace: \"pre-wrap\",  border: \"1px solid #578C3D\"}} />\n                        </Form.Item>\n                    </div>\n\n                    <div>\n                        <Button type=\"primary\" onClick={this.handleClick} style={{marginLeft: \"10px\", borderRadius: \"10px\",  marginBottom: \"30px\"}}>Remove second service</Button>\n                    </div>\n                </div>\n                :\n                <div>\n                    <Button type=\"primary\" onClick={this.handleClick} style={{ marginLeft: \"10px\", borderRadius: \"10px\", marginBottom: \"30px\" }}>Add a second service</Button>\n                </div>\n        )\n        \n        return (\n            <div style={{width: \"100%\", textAlign: \"center\"}}>\n                <div className=\"create-text-no-flex\" style={{fontSize: \"1.5em\", marginBottom: \"0.5em\"}}>\n                    Do you want to display funeral/service information on the memory? <br />\n                    <h5>This can be removed later.</h5>\n                </div>\n                <Form\n                    onFinish={this.saveData}\n                    scrollToFirstError>\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Form.Item name=\"date\">\n                            <DatePicker placeholder=\"Date\" style={inputStyle}/>\n                        </Form.Item>\n                        <Form.Item style={{margin:\"0em 2em\"}} name=\"time\">\n                            <TimePicker placeholder=\"Time\" style={inputStyle}/>\n                        </Form.Item>\n                    </div>\n\n                    <GoogleAutoComplete style={{width: \"50px\", height: \"50px\", padding: \"0px\"}}\n                            apiKey={constants.GOOGLE_MAPS_KEY}\n                            id='location'\n                            key='one'\n                            fields={{\n                                streetAddress: \"route\",\n                                streetAddress2: \"administrative_area_level_4\",\n                                locality: \"locality\",\n                                cityOrState: \"administrative_area_level_1\",\n                                postalcode: \"postal_code\",\n                                country: \"country\"\n                            }}\n                            callbackFunction={this.callbackFunc}\n                        />\n\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Form.Item name=\"description\">\n                            <Input.TextArea placeholder=\"Description/Details\" style={{width: \"34em\", height: \"10em\", borderRadius: \"10px\",  border: \"1px solid #578C3D\"}}/>\n                        </Form.Item>\n                    </div>\n\n                    {secondForm}\n                    \n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Button type=\"primary\" onClick={this.props.prev} style={navButton}>Previous</Button>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" style={navButton}>Skip/Next</Button>\n                        </Form.Item>\n                    </div>\n                </Form>\n            </div>);\n    }\n}\n"],"sourceRoot":""}