{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/webpack/buildin/global.js","views/TemplateDigitalMemory/TemplateComponentsEditor/dragitems.js","views/TemplateDigitalMemory/TemplateComponentsEditor/EditableComponent.js","views/TemplateDigitalMemory/TemplateComponentsEditor/EditorPopup.js","views/TemplateDigitalMemory/TemplateComponentsEditor/LayoutRowEditor.js","views/TemplateDigitalMemory/TemplateComponentsEditor/ProcessedLayoutEditor.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","indexOf","g","this","Function","e","window","DragItemTypes","IMAGE","Draggable","props","useDrag","item","type","rownum","colnum","collect","monitor","isDragging","drag","useDrop","accept","drop","isMergeable","promptMerge","swapTemplateItems","isOver","style","height","width","padding","borderStyle","ref","filter","children","EditableComponent","state","img","bind","togglePopupIsOpen","sendClickedInfo","nextProps","setState","onClick","positiong","zIndex","React","Component","InsertPopup","button","large","breakInsert","changeLastImg","ImagePopup","clearLastClicked","NonimagePopup","CustomPopup","EditorPopup","popup","popupCanMergeSwap","mergeTemplateItems","lastClickedImg","lastClickedLarge","open","popupIsOpen","onClose","LayoutRowEditor","LayoutCols","rowinfo","map","exists","h","md","className","col","textAlign","backgroundColor","src","objectFit","marginTop","deleteRow","ProcessedLayoutEditor","handleChangeTemplate","a","layout","templateLayout","axios","post","REMOTE_HOST","rowi","lastDraggedRow","coli","lastDraggedCol","rowj","lastDroppedRow","colj","lastDroppedCol","tempimg","tempTemplateLayout","j","draggedHeight","draggedWidth","droppedHeight","droppedWidth","rowStart","Math","min","rowEnd","max","colStart","colEnd","lastClickedRow","lastClickedCol","addRow","row","items","revertLastSavedTemplate","get","then","response","console","log","catch","error","resetTemplate","breakAndDeleteLarge","splice","k","dragRow","dragCol","dropRow","dropCol","underRow","underCol","imgi","imgj","r","c","rOver","cOver","rHeight","cWidth","LayoutRows","href","border","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","fluid"],"mappings":"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","file":"static/js/64.bb2b1082.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export const DragItemTypes = {\n    IMAGE: 'image',\n}\n","import React from 'react';\nimport \"../TemplateDigitalMemory.css\"\nimport \"../../../styles/styles.css\"\nimport { DragItemTypes } from \"./dragitems.js\"\nimport { useDrop, useDrag } from \"react-dnd\"\n\nfunction Draggable(props){\n    const[{isDragging}, drag] = useDrag({\n        item: {\n            type: DragItemTypes.IMAGE,\n            rownum: props.rownum,\n            colnum: props.colnum,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    })\n\n    const[{isOver}, drop] = useDrop({\n        accept: DragItemTypes.IMAGE,\n        drop: (item, monitor) => (props.isMergeable(item.rownum, item.colnum, props.rownum, props.colnum) ? \n            props.promptMerge(item.rownum, item.colnum, props.rownum, props.colnum) : \n            props.swapTemplateItems(item.rownum, item.colnum, props.rownum, props.colnum)\n        ),\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n        }),\n    })\n\n    return(\n        <div\n            style={{height: (props.height ? props.height : \"100%\"), width: \"100%\", padding: \"0px\", borderStyle: \"none\"}}\n            ref = {drag}\n        >\n            <div\n                style={{height: \"100%\", filter: \"blur(\" + (isOver ? \"5px\" : \"0px\") + \") sepia(\" + (isOver ? \"100%\" : \"0%\") + \")\"}}\n                ref = {drop}\n            >\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default class EditableComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            height: props.height,\n            rownum: props.rownum,\n            colnum: props.colnum,\n            img: props.img,\n        }\n        this.swapTemplateItems = props.swapTemplateItems.bind(this)\n        this.togglePopupIsOpen = props.togglePopupIsOpen.bind(this)\n        this.sendClickedInfo = props.sendClickedInfo.bind(this)\n        this.isMergeable = props.isMergeable.bind(this)\n        this.promptMerge = props.promptMerge.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            height: nextProps.height,\n            rownum: nextProps.rownum,\n            colnum: nextProps.colnum,\n            img: nextProps.img,\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <button\n                    style={{height: (this.state.height ? this.state.height : \"100%\"), width: \"100%\", padding: \"0px\", borderStyle: \"none\"}}\n                    onClick={() => {\n                        this.togglePopupIsOpen()\n                        this.sendClickedInfo(this.state.rownum, this.state.colnum, this.state.img)\n                    }}\n                >\n                    <Draggable\n                        height={this.state.height}\n                        rownum={this.state.rownum}\n                        colnum={this.state.colnum}\n                        swapTemplateItems={this.swapTemplateItems}\n                        style={{positiong: \"relative\", zIndex: \"-1\"}}\n                        isMergeable={this.isMergeable}\n                        promptMerge={this.promptMerge}\n                    >\n                        {this.props.children}\n                    </Draggable>\n                </button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Popup from \"reactjs-popup\"\n\nfunction InsertPopup(props){\n    let button = null\n    if(props.large){\n        button=(\n            <button\n                onClick={() => {props.breakInsert()}}\n            >\n                Break this section up.\n            </button>\n        )\n    }\n    return(\n        <div>\n            <button\n                onClick={() => {props.changeLastImg(\"/static/media/image3.bc0d3b4d.jpg\")}}\n            >\n                Add image\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"nonimage\")}}\n            >\n                Add Memory\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"/static/media/image8.b4f3dc7f.png\")}}\n            >\n                Add Spotify playlist\n            </button>\n            {button}\n        </div>\n    )\n}\n\nfunction ImagePopup(props){\n    return(\n        <div>\n            <button\n                onClick={() => {props.clearLastClicked()}}\n            >\n                Delete this.\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"/static/media/image3.bc0d3b4d.jpg\")}}\n            >\n                Show a different image\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"nonimage\")}}\n            >\n                Change to Memory\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"/static/media/image8.b4f3dc7f.png\")}}\n            >\n                Change to Spotify playlist\n            </button>\n        </div>\n    )\n}\n\nfunction NonimagePopup(props){\n    return(\n        <div>\n            <button\n                onClick={() => {props.clearLastClicked()}}\n            >\n                Delete this.\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"/static/media/image3.bc0d3b4d.jpg\")}}\n            >\n                Change to image\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"nonimage\")}}\n            >\n                Show a different Memory\n            </button>\n            <button\n                onClick={() => {props.changeLastImg(\"/static/media/image8.b4f3dc7f.png\")}}\n            >\n                Change to Spotify playlist\n            </button>\n        </div>\n    )\n}\n\nfunction CustomPopup(props){\n    const img = props.img\n    if(img === \"\"){\n        return(\n            <InsertPopup\n                large={props.large}\n                changeLastImg={props.changeLastImg}\n                breakInsert={props.breakInsert}\n            />\n        )\n    }\n    if(img === \"nonimage\"){\n        return(\n            <NonimagePopup\n                clearLastClicked={props.clearLastClicked}\n                changeLastImg={props.changeLastImg}\n            />\n        )\n    }\n    else{\n        return(\n            <ImagePopup\n                clearLastClicked={props.clearLastClicked}\n                changeLastImg={props.changeLastImg}\n            />\n        )\n    }\n}\n\nexport default function EditorPopup (props){\n    let popup\n    if(props.popupCanMergeSwap){\n        popup = (\n            <div>\n                <button\n                    onClick={() => {props.mergeTemplateItems()}}\n                >\n                    Merge\n                </button>\n                <button\n                    onClick={() => {props.swapTemplateItems()}}\n                >\n                    Swap\n                </button>\n            </div>\n        )\n    }\n    else{\n        popup=( \n            <CustomPopup\n                img={props.lastClickedImg}\n                large={props.lastClickedLarge}\n                clearLastClicked={props.clearLastClicked}\n                changeLastImg={props.changeLastImg}\n                breakInsert={props.breakInsert}\n            />\n        )\n    }\n    return(\n        <Popup\n            open={(props.popupIsOpen)}\n            onClose={() => {props.togglePopupIsOpen()}}\n            style={{zIndex: \"999999\"}}\n        >\n            {popup}\n        </Popup>\n    )\n}\n","import React from 'react';\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport \"../TemplateDigitalMemory.css\"\nimport \"../../../styles/styles.css\"\nimport EditableComponent from \"./EditableComponent.js\"\n\nexport default function LayoutRowEditor(props){\n    const LayoutCols = props.rowinfo.map((item) => {\n        if(!item.exists){\n            return(null)   \n        }\n        const h = (200 + (220 * (item.height - 1)))\n        if(item.img == 'nonimage'){\n            return(\n                <Col md={\"\" + (2 * item.width)} className=\"padded\" key={item.col}>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} colnum={item.col} img={item.img} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} isMergeable={props.isMergeable} promptMerge={props.promptMerge}>\n                        <div\n                            className = \"center\"\n                            style={{height: h, textAlign: \"center\", backgroundColor: \"lightgrey\"}}\n                        >\n                            memories (text) shared go here\n                        </div>\n                    </EditableComponent>\n                </Col>\n            )\n        }\n        if(item.img == ''){\n            return(\n                <Col md={\"\" + (2 * item.width)} className=\"padded\" key={item.col}>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} colnum={item.col} img={item.img} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} isMergeable={props.isMergeable} promptMerge={props.promptMerge}>\n                        <div\n                            className = \"center\"\n                            style={{height: h, textAlign: \"center\", backgroundColor: \"lightgreen\"}}\n                        >\n                            Insert memory or media here, or drag to merge with another item\n                            {item.height != 1 || item.width != 1 ? \", or click to break up this section\" : \"\"}\n                        </div>\n                    </EditableComponent>\n                </Col>\n            )\n        }\n        return(\n            <Col md={2 * item.width} className=\"padded\" key={item.col}>\n                <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} colnum={item.col} height={h} style={{zIndex: 99999}} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} img={item.img} isMergeable={props.isMergeable} promptMerge={props.promptMerge}>\n                    <img\n                        src={item.img}\n                        style={{height: h, width: \"100%\", objectFit: \"cover\"}}\n                    />\n                </EditableComponent>\n            </Col>\n        )\n    })\n\n    return(\n        <Row className=\"justify-content-md-center\" style={{zIndex: props.zIndex}}>\n            <Col md=\"1\" />\n            <Col md=\"10\" style={{zIndex: props.zIndex}}>\n                <Row className=\"justify-content-md-center\" style={{zIndex: props.zIndex}}>\n                    {LayoutCols}\n                </Row>\n            </Col>\n            <Col md=\"1\">\n                <button\n                    style={{marginTop: \"50%\"}}\n                    onClick={() => {\n                        props.deleteRow(props.rownum)\n                    }}\n                >\n                    Delete row\n                </button>\n            </Col>\n        </Row>\n    )\n}\n","import React from 'react';\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport LayoutRowEditor from './LayoutRowEditor.js'\nimport EditorPopup from './EditorPopup.js'\nimport { REMOTE_HOST } from \"../../../constants.js\"\nimport \"../../../styles/stylesWithButtons.css\"\n\n\nexport default class ProcessedLayoutEditor extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            templateLayout: props.templateLayout,\n            popupIsOpen: false,\n            popupCanMergeSwap : false,\n            lastClickedRow: -1,\n            lastClickedCol: -1,\n            lastClickedImg: \"\",\n            lastClickedLarge: false,\n            lastDraggedRow: -1,\n            lastDraggedCol: -1,\n            lastDroppedRow: -1,\n            lastDroppedCol: -1,\n        }\n\n        this.handleChangeTemplate = this.handleChangeTemplate.bind(this)\n        this.swapTemplateItems = this.swapTemplateItems.bind(this)\n        this.mergeTemplateItems = this.mergeTemplateItems.bind(this)\n        this.togglePopupIsOpen = this.togglePopupIsOpen.bind(this)\n        this.clearLastClicked = this.clearLastClicked.bind(this)\n        this.sendClickedInfo = this.sendClickedInfo.bind(this)\n        this.addRow = this.addRow.bind(this)\n        this.resetTemplate = this.resetTemplate.bind(this)\n        this.revertLastSavedTemplate = this.revertLastSavedTemplate.bind(this)\n        this.deleteRow = this.deleteRow.bind(this)\n        this.breakAndDeleteLarge = this.breakAndDeleteLarge.bind(this)\n        this.breakInsert = this.breakInsert.bind(this)\n        this.changeLastImg = this.changeLastImg.bind(this)\n        this.isMergeable = this.isMergeable.bind(this)\n        this.promptMerge = this.promptMerge.bind(this)\n    }\n\n    togglePopupIsOpen(){\n        this.setState({popupIsOpen: !this.state.popupIsOpen})\n    }\n\n    sendClickedInfo(row, col, img){\n        var large = (this.state.templateLayout[row][\"items\"][col][\"height\"] > 1 || this.state.templateLayout[row][\"items\"][col][\"width\"] > 1)\n        this.setState({\n            lastClickedRow: row,\n            lastClickedCol: col,\n            lastClickedImg: img,\n            lastClickedLarge: large,\n            popupCanMergeSwap: false,\n        })\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({templateLayout : nextProps.templateLayout})\n    }\n\n    handleChangeTemplate = async() => {\n        const layout = this.state.templateLayout\n        axios.post(\n            REMOTE_HOST + \"/templates/savetemplate\",\n            {layout}\n        );\n    }\n\n    swapTemplateItems = (rowi = this.state.lastDraggedRow, coli = this.state.lastDraggedCol, rowj = this.state.lastDroppedRow, colj = this.state.lastDroppedCol) => {\n        const tempimg = this.state.templateLayout[rowi][\"items\"][coli][\"img\"]\n        var tempTemplateLayout = this.state.templateLayout\n\n        tempTemplateLayout[rowi][\"items\"][coli][\"img\"] = this.state.templateLayout[rowj][\"items\"][colj][\"img\"]\n        tempTemplateLayout[rowj][\"items\"][colj][\"img\"] = tempimg\n\n        this.setState({\n            templateLayout: tempTemplateLayout\n        })\n    }\n\n    mergeTemplateItems = () => {\n        var draggedHeight = this.state.templateLayout[this.state.lastDraggedRow][\"items\"][this.state.lastDraggedCol][\"height\"]\n        var draggedWidth = this.state.templateLayout[this.state.lastDraggedRow][\"items\"][this.state.lastDraggedCol][\"width\"]\n        var droppedHeight = this.state.templateLayout[this.state.lastDroppedRow][\"items\"][this.state.lastDroppedCol][\"height\"]\n        var droppedWidth = this.state.templateLayout[this.state.lastDroppedRow][\"items\"][this.state.lastDroppedCol][\"width\"]\n        var rowStart = Math.min(this.state.lastDraggedRow, this.state.lastDroppedRow)\n        var rowEnd = Math.max(this.state.lastDraggedRow + draggedHeight - 1, this.state.lastDroppedRow + droppedHeight - 1)\n        var colStart = Math.min(this.state.lastDraggedCol, this.state.lastDroppedCol)\n        var colEnd = Math.max(this.state.lastDraggedCol + draggedWidth - 1, this.state.lastDroppedCol + droppedWidth - 1)\n        var img = (this.state.templateLayout[this.state.lastDraggedRow][\"items\"][this.state.lastDraggedCol][\"img\"] ? this.state.templateLayout[this.state.lastDraggedRow][\"items\"][this.state.lastDraggedCol][\"img\"] : this.state.templateLayout[this.state.lastDroppedRow][\"items\"][this.state.lastDroppedCol][\"img\"])\n        var i\n        var j\n        var tempTemplateLayout = this.state.templateLayout\n        for(i = rowStart; i <= rowEnd; i++){\n            for(j = colStart; j <= colEnd; j++){\n                tempTemplateLayout[i][\"items\"][j][\"img\"] = \"\"\n                tempTemplateLayout[i][\"items\"][j][\"exists\"] = (i == rowStart) ? false : true\n                tempTemplateLayout[i][\"items\"][j][\"under\"] = [i-rowStart, j-colStart]\n            }\n        }\n        tempTemplateLayout[rowStart][\"items\"][colStart][\"img\"] = img\n        tempTemplateLayout[rowStart][\"items\"][colStart][\"exists\"] = true\n        tempTemplateLayout[rowStart][\"items\"][colStart][\"under\"] = null\n        tempTemplateLayout[rowStart][\"items\"][colStart][\"height\"] = rowEnd - rowStart + 1\n        tempTemplateLayout[rowStart][\"items\"][colStart][\"width\"] = colEnd - colStart + 1\n        this.setState({\n            templateLayout: tempTemplateLayout,\n            popupCanMergeSwap: false,\n            lastClickedRow: rowStart,\n            lastClickedCol: colStart,\n            lastClickedImg: img,\n        })\n    }\n\n    clearLastClicked = () => {\n        this.changeLastImg(\"\")\n    }\n\n    addRow = () => {\n        var tempTemplateLayout = this.state.templateLayout\n        tempTemplateLayout.push({\n            row: tempTemplateLayout.length,\n            items: [\n                {col: 0, width: 1, height: 1, img: \"\", exists: true},\n                {col: 1, width: 1, height: 1, img: \"\", exists: true},\n                {col: 2, width: 1, height: 1, img: \"\", exists: true},\n                {col: 3, width: 1, height: 1, img: \"\", exists: true},\n                {col: 4, width: 1, height: 1, img: \"\", exists: true},\n                {col: 5, width: 1, height: 1, img: \"\", exists: true},\n            ]\n        })\n        this.setState({\n            templateLayout: tempTemplateLayout\n        })\n    }\n\n    revertLastSavedTemplate = () => {\n        axios.get(REMOTE_HOST + \"/templates/gettemplate\")\n            .then((response) => {\n                console.log(response)\n                this.setState({\n                    templateLayout: response[\"data\"]\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    resetTemplate = () => {\n        axios.get(REMOTE_HOST + \"/templates/getresettemplate\")\n            .then((response) => {\n                console.log(response)\n                this.setState({\n                    templateLayout: response[\"data\"]\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    deleteRow = (rownum) => {\n        var tempTemplateLayout = this.state.templateLayout\n        var i\n        for(i = 0; i < 6; i++){\n            if(tempTemplateLayout[rownum][\"items\"][i][\"under\"] != null){\n                var rowStart = rownum - tempTemplateLayout[rownum][\"items\"][i][\"under\"][0]\n                var colStart = i - tempTemplateLayout[rownum][\"items\"][i][\"under\"][1]\n                this.breakAndDeleteLarge(tempTemplateLayout, rowStart, colStart)\n            }\n            if(tempTemplateLayout[rownum][\"items\"][i][\"height\"] != 1 || tempTemplateLayout[rownum][\"items\"][i][\"width\"] != 1){\n                this.breakAndDeleteLarge(tempTemplateLayout, rownum, i)\n            }\n        }\n\n        tempTemplateLayout.splice(rownum, 1)\n        for(i = 0; i < tempTemplateLayout.length; i++){\n            tempTemplateLayout[i][\"row\"] = i\n        }\n\n        this.setState({\n            templateLayout: tempTemplateLayout\n        })\n    }\n\n    breakAndDeleteLarge = (tempTemplateLayout, rowStart, colStart) => {\n        var rowEnd = rowStart + tempTemplateLayout[rowStart][\"items\"][colStart][\"height\"]\n        var colEnd = colStart + tempTemplateLayout[rowStart][\"items\"][colStart][\"width\"]\n        var j\n        var k\n        for(j = rowStart; j < rowEnd; j++){\n            for(k = colStart; k < colEnd; k++){\n                tempTemplateLayout[j][\"items\"][k][\"img\"] = \"\"\n                tempTemplateLayout[j][\"items\"][k][\"exists\"] = true\n                tempTemplateLayout[j][\"items\"][k][\"height\"] = 1\n                tempTemplateLayout[j][\"items\"][k][\"width\"] = 1\n                tempTemplateLayout[j][\"items\"][k][\"under\"] = null\n            }\n        }\n    }\n\n    breakInsert = () => {\n        var tempTemplateLayout = this.state.templateLayout\n        this.breakAndDeleteLarge(tempTemplateLayout, this.state.lastClickedRow, this.state.lastClickedCol)\n        this.setState({\n            templateLayout: tempTemplateLayout,\n            lastClickedLarge: false,\n        })\n    }\n\n    changeLastImg(img){\n        var tempTemplateLayout = this.state.templateLayout\n        tempTemplateLayout[this.state.lastClickedRow][\"items\"][this.state.lastClickedCol][\"img\"] = img\n        this.setState({\n            templateLayout: tempTemplateLayout,\n            lastClickedImg: img,\n        })\n    }\n\n    isMergeable(rowi, coli, rowj, colj){\n        if(this.state.templateLayout[rowi][\"items\"][coli][\"under\"] != null){\n            var underRow = this.state.templateLayout[rowi][\"items\"][coli][\"under\"][0]\n            var underCol = this.state.templateLayout[rowi][\"items\"][coli][\"under\"][1]\n            rowi -= underRow\n            coli -= underCol\n        }\n        if(this.state.templateLayout[rowj][\"items\"][colj][\"under\"] != null){\n            var underRow = this.state.templateLayout[rowj][\"items\"][colj][\"under\"][0]\n            var underCol = this.state.templateLayout[rowj][\"items\"][colj][\"under\"][1]\n            rowj -= underRow\n            colj -= underCol\n        }\n        const imgi = this.state.templateLayout[rowi][\"items\"][coli][\"img\"]\n        const imgj = this.state.templateLayout[rowj][\"items\"][colj][\"img\"]\n        if(imgi != \"\" && imgj != \"\"){\n            return false\n        }\n        var rowStart = Math.min(rowi, rowj)\n        var colStart = Math.min(coli, colj)\n        var rowEnd = Math.max(rowi + this.state.templateLayout[rowi][\"items\"][coli][\"height\"] - 1, rowj + this.state.templateLayout[rowj][\"items\"][colj][\"height\"] - 1)\n        var colEnd = Math.max(coli + this.state.templateLayout[rowi][\"items\"][coli][\"width\"] - 1, colj + this.state.templateLayout[rowj][\"items\"][colj][\"width\"] - 1)\n        var r\n        var c\n        for(r = rowStart; r <= rowEnd; r++){\n            for(c = colStart; c <= colEnd; c++){\n                if(this.state.templateLayout[r][\"items\"][c][\"img\"] != \"\"){\n                    if(!(r == rowi && c == coli) && !(r == rowj && c == colj)){\n                        return false\n                    }\n                }\n                if(this.state.templateLayout[r][\"items\"][c][\"under\"] != null){\n                    const rOver = r - this.state.templateLayout[r][\"items\"][c][\"under\"][0]\n                    const cOver = c - this.state.templateLayout[r][\"items\"][c][\"under\"][1]\n                    if(rOver < rowStart){\n                        return false\n                    }\n                    if(cOver < colStart){\n                        return false\n                    }\n                }\n                var rHeight = this.state.templateLayout[r][\"items\"][c][\"height\"] + r - 1\n                var cWidth = this.state.templateLayout[r][\"items\"][c][\"width\"] + c - 1\n                if(rHeight > rowEnd){\n                    return false;\n                }\n                if(cWidth > colEnd){\n                    return false;\n                }\n            }\n        }\n        return true\n    }\n\n    promptMerge = (dragRow, dragCol, dropRow, dropCol) => {\n        this.setState({\n            popupIsOpen: true,\n            popupCanMergeSwap: true,\n            lastDraggedRow: dragRow,\n            lastDraggedCol: dragCol,\n            lastDroppedRow: dropRow,\n            lastDroppedCol: dropCol,\n        })\n    }\n\n    render(){\n        const LayoutRows = this.state.templateLayout.map((rowinfo) => {\n            return(\n                <LayoutRowEditor\n                    rownum={rowinfo.row}\n                    rowinfo={rowinfo.items}\n                    key={rowinfo.row}\n                    swapTemplateItems={this.swapTemplateItems}\n                    togglePopupIsOpen={this.togglePopupIsOpen}\n                    sendClickedInfo={this.sendClickedInfo}\n                    zIndex={\"\" + (this.state.templateLayout.length - rowinfo.row)}\n                    deleteRow={this.deleteRow}\n                    isMergeable={this.isMergeable}\n                    promptMerge={this.promptMerge}\n                />\n            )\n        })\n\n        return(\n            <div>\n                <a href=\"/templatedigitalmemory\">\n                <button\n                        style={{ border: \"none\", borderRadius: 4, paddingLeft: 15, paddingRight: 15, paddingTop:5, paddingBottom:5}}\n                    >\n                        View page\n                    </button>\n                </a>\n                <br />\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.handleChangeTemplate()}}\n                >\n                    Save current template\n                </button>\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.revertLastSavedTemplate()}}\n                >\n                    Revert last saved template\n                </button>\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.resetTemplate()}}\n                >\n                    RESET ORIGINAL TEMPLATE\n                </button>\n                <br />\n                <Container fluid={true}>\n                    {LayoutRows}\n                </Container>\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.addRow()}}\n                >\n                    Add row\n                </button>\n                <br />\n                <EditorPopup\n                    popupIsOpen={this.state.popupIsOpen}\n                    popupCanMergeSwap={this.state.popupCanMergeSwap}\n                    togglePopupIsOpen={this.togglePopupIsOpen}\n                    lastClickedImg={this.state.lastClickedImg}\n                    lastClickedLarge={this.state.lastClickedLarge}\n                    clearLastClicked={this.clearLastClicked}\n                    changeLastImg={this.changeLastImg}\n                    breakInsert={this.breakInsert}\n                    swapTemplateItems={this.swapTemplateItems}\n                    mergeTemplateItems={this.mergeTemplateItems}\n                />\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}