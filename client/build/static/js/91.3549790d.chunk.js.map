{"version":3,"sources":["../node_modules/webpack/buildin/global.js","views/TemplateDigitalMemory/TemplateComponentsEditor/dragitems.js","views/TemplateDigitalMemory/TemplateComponentsEditor/EditableComponent.js"],"names":["g","this","Function","e","window","module","exports","DragItemTypes","IMAGE","Draggable","props","useDrag","item","type","rownum","colnum","collect","monitor","isDragging","drag","useDrop","accept","drop","isMergeable","promptMerge","swapTemplateItems","isOver","style","height","width","padding","borderStyle","ref","filter","children","EditableComponent","state","img","bind","togglePopupIsOpen","sendClickedInfo","nextProps","setState","onClick","positiong","zIndex","React","Component"],"mappings":"kHAAA,IAAIA,EAGJA,EAAK,WACJ,OAAOC,KADH,GAIL,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,kBAAXC,SAAqBJ,EAAII,QAOrCC,EAAOC,QAAUN,G,gCCnBjB,qDAAO,IAAMO,EAAgB,CACzBC,MAAO,U,4LCKX,SAASC,EAAUC,GAAO,IAAD,EACOC,YAAQ,CAChCC,KAAM,CACFC,KAAMN,gBAAcC,MACpBM,OAAQJ,EAAMI,OACdC,OAAQL,EAAMK,QAElBC,QAAS,SAAAC,GAAO,MAAK,CACjBC,aAAcD,EAAQC,iBART,mBACDC,GADC,KACdD,WADc,QAYGE,YAAQ,CAC5BC,OAAQd,gBAAcC,MACtBc,KAAM,SAACV,EAAMK,GAAP,OAAoBP,EAAMa,YAAYX,EAAKE,OAAQF,EAAKG,OAAQL,EAAMI,OAAQJ,EAAMK,QACtFL,EAAMc,YAAYZ,EAAKE,OAAQF,EAAKG,OAAQL,EAAMI,OAAQJ,EAAMK,QAChEL,EAAMe,kBAAkBb,EAAKE,OAAQF,EAAKG,OAAQL,EAAMI,OAAQJ,EAAMK,SAE1EC,QAAS,SAAAC,GAAO,MAAK,CACjBS,SAAUT,EAAQS,aAnBL,mBAYdA,EAZc,KAYdA,OAASJ,EAZK,KAuBrB,OACI,yBACIK,MAAO,CAACC,OAASlB,EAAMkB,OAASlB,EAAMkB,OAAS,OAASC,MAAO,OAAQC,QAAS,MAAOC,YAAa,QACpGC,IAAOb,GAEP,yBACIQ,MAAO,CAACC,OAAQ,OAAQK,OAAQ,SAAWP,EAAS,MAAQ,OAAS,YAAcA,EAAS,OAAS,MAAQ,KAC7GM,IAAOV,GAENZ,EAAMwB,W,IAMFC,E,kDACjB,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAQ,CACTR,OAAQlB,EAAMkB,OACdd,OAAQJ,EAAMI,OACdC,OAAQL,EAAMK,OACdsB,IAAK3B,EAAM2B,KAEf,EAAKZ,kBAAoBf,EAAMe,kBAAkBa,KAAxB,gBACzB,EAAKC,kBAAoB7B,EAAM6B,kBAAkBD,KAAxB,gBACzB,EAAKE,gBAAkB9B,EAAM8B,gBAAgBF,KAAtB,gBACvB,EAAKf,YAAcb,EAAMa,YAAYe,KAAlB,gBACnB,EAAKd,YAAcd,EAAMc,YAAYc,KAAlB,gBAZL,E,sEAeQG,GACtBxC,KAAKyC,SAAS,CACVd,OAAQa,EAAUb,OAClBd,OAAQ2B,EAAU3B,OAClBC,OAAQ0B,EAAU1B,OAClBsB,IAAKI,EAAUJ,Q,+BAId,IAAD,OACJ,OACI,6BACI,4BACIV,MAAO,CAACC,OAAS3B,KAAKmC,MAAMR,OAAS3B,KAAKmC,MAAMR,OAAS,OAASC,MAAO,OAAQC,QAAS,MAAOC,YAAa,QAC9GY,QAAS,WACL,EAAKJ,oBACL,EAAKC,gBAAgB,EAAKJ,MAAMtB,OAAQ,EAAKsB,MAAMrB,OAAQ,EAAKqB,MAAMC,OAG1E,kBAAC5B,EAAD,CACImB,OAAQ3B,KAAKmC,MAAMR,OACnBd,OAAQb,KAAKmC,MAAMtB,OACnBC,OAAQd,KAAKmC,MAAMrB,OACnBU,kBAAmBxB,KAAKwB,kBACxBE,MAAO,CAACiB,UAAW,WAAYC,OAAQ,MACvCtB,YAAatB,KAAKsB,YAClBC,YAAavB,KAAKuB,aAEjBvB,KAAKS,MAAMwB,gB,GA5CWY,IAAMC","file":"static/js/91.3549790d.chunk.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export const DragItemTypes = {\n    IMAGE: 'image',\n}\n","import React from 'react';\nimport \"../TemplateDigitalMemory.css\"\nimport \"../../../styles/styles.css\"\nimport { DragItemTypes } from \"./dragitems.js\"\nimport { useDrop, useDrag } from \"react-dnd\"\n\nfunction Draggable(props){\n    const[{isDragging}, drag] = useDrag({\n        item: {\n            type: DragItemTypes.IMAGE,\n            rownum: props.rownum,\n            colnum: props.colnum,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    })\n\n    const[{isOver}, drop] = useDrop({\n        accept: DragItemTypes.IMAGE,\n        drop: (item, monitor) => (props.isMergeable(item.rownum, item.colnum, props.rownum, props.colnum) ? \n            props.promptMerge(item.rownum, item.colnum, props.rownum, props.colnum) : \n            props.swapTemplateItems(item.rownum, item.colnum, props.rownum, props.colnum)\n        ),\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n        }),\n    })\n\n    return(\n        <div\n            style={{height: (props.height ? props.height : \"100%\"), width: \"100%\", padding: \"0px\", borderStyle: \"none\"}}\n            ref = {drag}\n        >\n            <div\n                style={{height: \"100%\", filter: \"blur(\" + (isOver ? \"5px\" : \"0px\") + \") sepia(\" + (isOver ? \"100%\" : \"0%\") + \")\"}}\n                ref = {drop}\n            >\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default class EditableComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            height: props.height,\n            rownum: props.rownum,\n            colnum: props.colnum,\n            img: props.img,\n        }\n        this.swapTemplateItems = props.swapTemplateItems.bind(this)\n        this.togglePopupIsOpen = props.togglePopupIsOpen.bind(this)\n        this.sendClickedInfo = props.sendClickedInfo.bind(this)\n        this.isMergeable = props.isMergeable.bind(this)\n        this.promptMerge = props.promptMerge.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            height: nextProps.height,\n            rownum: nextProps.rownum,\n            colnum: nextProps.colnum,\n            img: nextProps.img,\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <button\n                    style={{height: (this.state.height ? this.state.height : \"100%\"), width: \"100%\", padding: \"0px\", borderStyle: \"none\"}}\n                    onClick={() => {\n                        this.togglePopupIsOpen()\n                        this.sendClickedInfo(this.state.rownum, this.state.colnum, this.state.img)\n                    }}\n                >\n                    <Draggable\n                        height={this.state.height}\n                        rownum={this.state.rownum}\n                        colnum={this.state.colnum}\n                        swapTemplateItems={this.swapTemplateItems}\n                        style={{positiong: \"relative\", zIndex: \"-1\"}}\n                        isMergeable={this.isMergeable}\n                        promptMerge={this.promptMerge}\n                    >\n                        {this.props.children}\n                    </Draggable>\n                </button>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}