{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/webpack/buildin/global.js","views/Template2DigitalMemory/Template2ComponentsEditor/dragitems.js","views/Template2DigitalMemory/Template2ComponentsEditor/EditableComponent.js","views/Template2DigitalMemory/Template2ComponentsEditor/EditorPopup.js","views/Template2DigitalMemory/Template2ComponentsEditor/Layout2RowEditor.js","views/Template2DigitalMemory/Template2ComponentsEditor/ProcessedLayout2Editor.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","indexOf","g","this","Function","e","window","DragItemTypes","IMAGE","Draggable","props","useDrag","item","type","rownum","index","collect","monitor","isDragging","drag","useDrop","accept","drop","swapTemplateItems","isOver","style","height","width","padding","borderStyle","ref","filter","children","EditableComponent","state","bind","togglePopupIsOpen","sendClickedInfo","nextProps","setState","margin","backgroundColor","onClick","React","Component","InsertPopup","changeLastType","ImagePopup","clearLastClicked","NonimagePopup","CustomPopup","console","log","large","breakInsert","EditorPopup","open","popupIsOpen","onClose","zIndex","lastClickedTyp","imgStyle","objectFit","h","DisplayItem","src","img","className","LayoutRowEditor","LayoutCols","md","rowinfo","marginTop","deleteRow","ProcessedLayoutEditor","handleChangeTemplate","a","layout","templateLayout","axios","post","REMOTE_HOST","rowi","lastDraggedRow","indi","lastDraggedInd","rowj","lastDroppedRow","indj","lastDroppedInd","tempItem","tempSize","tempTemplateLayout","addRow","row","items","ind","size","revertLastSavedTemplate","get","then","response","catch","error","resetTemplate","splice","lastClickedRow","lastClickedInd","typ","LayoutRows","map","href","marginLeft","marginRight","fluid"],"mappings":"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","file":"static/js/73.097faf75.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export const DragItemTypes = {\n    IMAGE: 'image',\n}\n","import React from 'react';\nimport \"../Template2DigitalMemory.css\"\nimport \"../../../styles/styles.css\"\nimport { DragItemTypes } from \"./dragitems.js\"\nimport { useDrop, useDrag } from \"react-dnd\"\n\nfunction Draggable(props){\n    const[{isDragging}, drag] = useDrag({\n        item: {\n            type: DragItemTypes.IMAGE,\n            rownum: props.rownum,\n            index: props.index,\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n    })\n\n    const[{isOver}, drop] = useDrop({\n        accept: DragItemTypes.IMAGE,\n        drop: (item, monitor) => props.swapTemplateItems(item.rownum, item.index, props.rownum, props.index),\n        collect: monitor => ({\n            isOver: !!monitor.isOver(),\n        }),\n    })\n\n    return(\n        <div\n            style={{height: \"100%\", width: \"100%\", padding: \"0px\", borderStyle: \"none\"}}\n            ref = {drag}\n        >\n            <div\n                style={{height: \"100%\", filter: \"blur(\" + (isOver ? \"5px\" : \"0px\") + \") sepia(\" + (isOver ? \"100%\" : \"0%\") + \")\"}}\n                ref = {drop}\n            >\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default class EditableComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            rownum: props.rownum,\n            index: props.index,\n            type: props.type,\n        }\n        this.swapTemplateItems = props.swapTemplateItems.bind(this)\n        this.togglePopupIsOpen = props.togglePopupIsOpen.bind(this)\n        this.sendClickedInfo = props.sendClickedInfo.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            rownum: nextProps.rownum,\n            index: nextProps.index,\n            type: nextProps.type,\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <button\n                    style={{height: \"100%\", width: \"100%\", padding: \"0px\", borderStyle: \"none\", margin: \"0px\", backgroundColor: \"transparent\"}}\n                    onClick={() => {\n                        this.togglePopupIsOpen()\n                        this.sendClickedInfo(this.state.rownum, this.state.index, this.state.type)\n                    }}\n                >\n                    <Draggable\n                        rownum={this.state.rownum}\n                        index={this.state.index}\n                        swapTemplateItems={this.swapTemplateItems}\n                    >\n                        {this.props.children}\n                    </Draggable>\n                </button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Popup from \"reactjs-popup\"\n\nfunction InsertPopup(props){\n    return(\n        <div>\n            <button\n                onClick={() => {props.changeLastType(\"img\", \"/static/media/image8.e8b7e3d9.jpg\")}}\n            >\n                Add image\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"text\")}}\n            >\n                Add Memory\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"img\", \"/static/media/image2.5726fd40.png\")}}\n            >\n                Add Spotify playlist\n            </button>\n        </div>\n    )\n}\n\nfunction ImagePopup(props){\n    return(\n        <div>\n            <button\n                onClick={() => {props.clearLastClicked()}}\n            >\n                Delete this.\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"img\", \"/static/media/image8.e8b7e3d9.jpg\")}}\n            >\n                Show a different image\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"text\")}}\n            >\n                Change to Memory\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"img\", \"/static/media/image2.5726fd40.png\")}}\n            >\n                Change to Spotify playlist\n            </button>\n        </div>\n    )\n}\n\nfunction NonimagePopup(props){\n    return(\n        <div>\n            <button\n                onClick={() => {props.clearLastClicked()}}\n            >\n                Delete this.\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"img\", \"/static/media/image8.e8b7e3d9.jpg\")}}\n            >\n                Change to image\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"text\")}}\n            >\n                Show a different Memory\n            </button>\n            <button\n                onClick={() => {props.changeLastType(\"img\", \"/static/media/image2.5726fd40.png\")}}\n            >\n                Change to Spotify playlist\n            </button>\n        </div>\n    )\n}\n\nfunction CustomPopup(props){\n    const type = props.type\n    console.log(type)\n    if(type === \"empty\"){\n        return(\n            <InsertPopup\n                large={props.large}\n                changeLastType={props.changeLastType}\n                breakInsert={props.breakInsert}\n            />\n        )\n    }\n    if(type === \"text\"){\n        return(\n            <NonimagePopup\n                clearLastClicked={props.clearLastClicked}\n                changeLastType={props.changeLastType}\n            />\n        )\n    }\n    else{\n        return(\n            <ImagePopup\n                clearLastClicked={props.clearLastClicked}\n                changeLastType={props.changeLastType}\n            />\n        )\n    }\n}\n\nexport default function EditorPopup (props){\n    return(\n        <Popup\n            open={(props.popupIsOpen)}\n            onClose={() => {props.togglePopupIsOpen()}}\n            style={{zIndex: \"999999\"}}\n        >\n            <CustomPopup\n                type={props.lastClickedTyp}\n                clearLastClicked={props.clearLastClicked}\n                changeLastType={props.changeLastType}\n            />\n        </Popup>\n    )\n}\n","import React from 'react';\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport \"../Template2DigitalMemory.css\"\nimport \"../../../styles/styles.css\"\nimport EditableComponent from \"./EditableComponent.js\"\n\nconst imgStyle = {height: \"100%\", width: \"100%\", objectFit: \"cover\"}\nconst h = 600\n\nfunction DisplayItem(props){\n    if(props.item.type == \"img\"){\n        return (\n            <img src={props.item.img} style={imgStyle} />\n        )\n    }\n    else if(props.item.type == \"empty\"){\n        return (\n            <div className=\"center\" style={{height: \"100%\", width: \"100%\", backgroundColor: \"green\"}}>\n                Insert photo or memory here.\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className=\"center\" style={{height: \"100%\", width: \"100%\", backgroundColor: \"#E2FCD3\"}}>\n                Creator or contributor memory.\n            </div>\n        )\n    }\n}\n\nexport default function LayoutRowEditor(props){\n    var LayoutCols\n    if(props.rownum % 2){\n        LayoutCols = (\n            <Row className=\"justify-content-md-center\" style={{height: h}}>\n                <Col md=\"7\" style={{height: h, padding: \"0px\"}}>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} index={1} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} type={props.rowinfo[1].type}>\n                        <div style={{height: (h*0.7), padding: \"10px\"}}>\n                            <DisplayItem item={props.rowinfo[1]} />\n                        </div>\n                    </EditableComponent>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} index={2} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} type={props.rowinfo[2].type}>\n                        <div style={{height: (h*0.3), padding: \"10px\"}}>\n                            <DisplayItem item={props.rowinfo[2]} />\n                        </div>\n                    </EditableComponent>\n                </Col>\n                <Col md=\"5\" style={{height: h, padding: \"10px\"}}>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} index={0} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} type={props.rowinfo[0].type}>\n                        <div style={{height: (h-20)}}>\n                            <DisplayItem item={props.rowinfo[0]} />\n                        </div>\n                    </EditableComponent>\n                </Col>\n            </Row>\n        )\n    }\n    else{\n       LayoutCols = (\n            <Row className=\"justify-content-md-center\" style={{height: h}}>\n                <Col md=\"5\" style={{height: h, padding: \"10px\"}}>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} index={0} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} type={props.rowinfo[0].type}>\n                        <div style={{height: (h-20)}}>\n                            <DisplayItem item={props.rowinfo[0]} />\n                        </div>\n                    </EditableComponent>\n                </Col>\n                <Col md=\"7\" style={{height: h, padding: \"0px\"}}>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} index={1} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} type={props.rowinfo[1].type}>\n                        <div style={{height: (h*0.7), padding: \"10px\"}}>\n                            <DisplayItem item={props.rowinfo[1]} />\n                        </div>\n                    </EditableComponent>\n                    <EditableComponent swapTemplateItems={props.swapTemplateItems} rownum={props.rownum} index={2} togglePopupIsOpen={props.togglePopupIsOpen} sendClickedInfo={props.sendClickedInfo} type={props.rowinfo[2].type}>\n                        <div style={{height: (h*0.3), padding: \"10px\"}}>\n                            <DisplayItem item={props.rowinfo[2]} />\n                        </div>\n                    </EditableComponent>\n                </Col>\n            </Row>\n        )\n    }\n\n    return(\n        <Row className=\"justify-content-md-center\" style={{zIndex: props.zIndex}}>\n            <Col md=\"2\" />\n            <Col md=\"8\" style={{zIndex: props.zIndex}}>\n                {LayoutCols}\n            </Col>\n            <Col md=\"2\">\n                <button\n                    style={{marginTop: \"50%\"}}\n                    onClick={() => {\n                        props.deleteRow(props.rownum)\n                    }}\n                >\n                    Delete these three\n                </button>\n            </Col>\n        </Row>\n    )\n}\n","import React from 'react';\nimport {Button, Form, Container, Row, Col} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport LayoutRowEditor from './Layout2RowEditor.js'\nimport EditorPopup from './EditorPopup.js'\nimport { REMOTE_HOST } from \"../../../constants.js\"\n\nexport default class ProcessedLayoutEditor extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            templateLayout: props.templateLayout,\n            popupIsOpen: false,\n            lastClickedRow: -1,\n            lastClickedInd: -1,\n            lastClickedTyp: \"\",\n            lastDraggedRow: -1,\n            lastDraggedInd: -1,\n            lastDroppedRow: -1,\n            lastDroppedInd: -1,\n        }\n\n        this.handleChangeTemplate = this.handleChangeTemplate.bind(this)\n        this.swapTemplateItems = this.swapTemplateItems.bind(this)\n        this.togglePopupIsOpen = this.togglePopupIsOpen.bind(this)\n        this.clearLastClicked = this.clearLastClicked.bind(this)\n        this.sendClickedInfo = this.sendClickedInfo.bind(this)\n        this.addRow = this.addRow.bind(this)\n        this.resetTemplate = this.resetTemplate.bind(this)\n        this.revertLastSavedTemplate = this.revertLastSavedTemplate.bind(this)\n        this.deleteRow = this.deleteRow.bind(this)\n        this.changeLastType = this.changeLastType.bind(this)\n    }\n\n    togglePopupIsOpen(){\n        this.setState({popupIsOpen: !this.state.popupIsOpen})\n    }\n\n    sendClickedInfo(row, ind, typ){\n        this.setState({\n            lastClickedRow: row,\n            lastClickedInd: ind,\n            lastClickedTyp: typ,\n        })\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({templateLayout : nextProps.templateLayout})\n    }\n\n    handleChangeTemplate = async() => {\n        const layout = this.state.templateLayout\n        axios.post(\n            REMOTE_HOST + \"/templates/savetemplate2\",\n            {layout}\n        );\n    }\n\n    swapTemplateItems = (rowi = this.state.lastDraggedRow, indi = this.state.lastDraggedInd, rowj = this.state.lastDroppedRow, indj = this.state.lastDroppedInd) => {\n        console.log(this.state.templateLayout[rowi][\"items\"][indi])\n        console.log(this.state.templateLayout[rowj][\"items\"][indj])\n        const tempItem = this.state.templateLayout[rowi][\"items\"][indi]\n        const tempSize = this.state.templateLayout[rowj][\"items\"][indj][\"size\"]\n        var tempTemplateLayout = this.state.templateLayout\n\n        tempTemplateLayout[rowi][\"items\"][indi] = this.state.templateLayout[rowj][\"items\"][indj]\n        tempTemplateLayout[rowi][\"items\"][indi][\"index\"] = indi\n        tempTemplateLayout[rowi][\"items\"][indi][\"size\"] = tempItem[\"size\"]\n        tempTemplateLayout[rowj][\"items\"][indj] = tempItem\n        tempTemplateLayout[rowj][\"items\"][indj][\"index\"] = indj\n        tempTemplateLayout[rowj][\"items\"][indj][\"size\"] = tempSize\n\n        this.setState({\n            templateLayout: tempTemplateLayout\n        })\n        console.log(this.state.templateLayout[rowi][\"items\"][indi])\n        console.log(this.state.templateLayout[rowj][\"items\"][indj])\n    }\n\n    clearLastClicked = () => {\n        this.changeLastType(\"empty\")\n    }\n\n    addRow = () => {\n        var tempTemplateLayout = this.state.templateLayout\n        tempTemplateLayout.push({\n            row: tempTemplateLayout.length,\n            items: [\n                {ind: 0, size: \"big\", type: \"empty\"},\n                {ind: 1, size: \"med\", type: \"empty\"},\n                {ind: 2, size: \"small\", type: \"empty\"},\n            ]\n        })\n        this.setState({\n            templateLayout: tempTemplateLayout\n        })\n    }\n\n    revertLastSavedTemplate = () => {\n        axios.get(REMOTE_HOST + \"/templates/gettemplate2\")\n            .then((response) => {\n                console.log(response)\n                this.setState({\n                    templateLayout: response[\"data\"]\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    resetTemplate = () => {\n        axios.get(REMOTE_HOST + \"/templates/getresettemplate2\")\n            .then((response) => {\n                console.log(response)\n                this.setState({\n                    templateLayout: response[\"data\"]\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    deleteRow = (rownum) => {\n        var tempTemplateLayout = this.state.templateLayout\n        tempTemplateLayout.splice(rownum, 1)\n\n        var i\n        for(i = 0; i < tempTemplateLayout.length; i++){\n            tempTemplateLayout[i][\"row\"] = i\n        }\n\n        this.setState({\n            templateLayout: tempTemplateLayout\n        })\n    }\n\n    changeLastType(typ, img = null){\n        var tempTemplateLayout = this.state.templateLayout\n        tempTemplateLayout[this.state.lastClickedRow][\"items\"][this.state.lastClickedInd][\"type\"] = typ\n        tempTemplateLayout[this.state.lastClickedRow][\"items\"][this.state.lastClickedInd][\"img\"] = img\n\n        this.setState({\n            templateLayout: tempTemplateLayout,\n            lastClickedTyp: typ,\n        })\n    }\n\n    render(){\n        const LayoutRows = this.state.templateLayout.map((rowinfo) => {\n            return(\n                <LayoutRowEditor\n                    rownum={rowinfo.row}\n                    rowinfo={rowinfo.items}\n                    key={rowinfo.row}\n                    swapTemplateItems={this.swapTemplateItems}\n                    togglePopupIsOpen={this.togglePopupIsOpen}\n                    sendClickedInfo={this.sendClickedInfo}\n                    zIndex={\"\" + (this.state.templateLayout.length - rowinfo.row)}\n                    deleteRow={this.deleteRow}\n                />\n            )\n        })\n\n        return(\n            <div>\n                <a href=\"/template2digitalmemory\">\n                    <button\n                        style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    >\n                        View page\n                    </button>\n                </a>\n                <br />\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.handleChangeTemplate()}}\n                >\n                    Save current template\n                </button>\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.revertLastSavedTemplate()}}\n                >\n                    Revert last saved template\n                </button>\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.resetTemplate()}}\n                >\n                    RESET ORIGINAL TEMPLATE\n                </button>\n                <br />\n                <Container fluid={true}>\n                    {LayoutRows}\n                </Container>\n                <br />\n                <button\n                    style={{width: \"20%\", marginLeft: \"40%\", marginRight: \"40%\"}}\n                    onClick={() => {this.addRow()}}\n                >\n                    Add row\n                </button>\n                <br />\n                <EditorPopup\n                    popupIsOpen={this.state.popupIsOpen}\n                    togglePopupIsOpen={this.togglePopupIsOpen}\n                    lastClickedTyp={this.state.lastClickedTyp}\n                    clearLastClicked={this.clearLastClicked}\n                    changeLastType={this.changeLastType}\n                    swapTemplateItems={this.swapTemplateItems}\n                />\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}