{"version":3,"sources":["views/Questions/Sections/Q7.jsx"],"names":["Q7","props","saveData","values","localStorage","setItem","spotify","onFinish","console","log","setState","spotifyLink","state","navButton","borderRadius","margin","width","songLink","this","newLink","link","linkArr","split","concat","join","embedSpotify","linkFrame","src","height","frameBorder","allowtransparency","allow","style","textAlign","className","fontSize","marginBottom","scrollToFirstError","display","justifyContent","Item","label","name","rules","type","message","placeholder","onClick","prev","next","React","Component"],"mappings":"qPAcqBA,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,SAAW,SAAAC,GACPC,aAAaC,QAAQ,UAAWF,EAAOG,UATzB,EAalBC,SAAW,SAAAJ,GACPK,QAAQC,IAAI,WAAYN,EAAOG,SAC/B,EAAKI,SAAS,CAAEC,YAAaR,EAAOG,WAbpC,EAAKM,MAAQ,CACXD,YAAa,WAHD,E,qDAkBR,IAAD,EAECE,EAAY,CACdC,aAAc,OACdC,OAAQ,OACRC,MAAO,SAGPC,EAAWC,KAAKN,MAAMD,YAC1BH,QAAQC,IAAIQ,GACZ,IAAIE,EAxCZ,SAAsBC,GAClB,IAAIC,EAAUD,EAAKE,MAAM,KAMzB,OAJAD,EAAQ,GADO,SACOE,OAAOF,EAAQ,IAErCb,QAAQC,IAAIY,EAAQ,IAEbA,EAAQG,KAAK,KAiCFC,CAAaP,KAAKN,MAAMD,aAChCe,EAAwC,YAA3BR,KAAKN,MAAMD,YAA4B,6BAAQ,4BAAQgB,IAAKR,EAASH,MAAM,MAAMY,OAAO,MAAMC,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,oBAEhK,OACI,yBAAKC,MAAO,CAAChB,MAAO,OAAQiB,UAAW,WACnC,yBAAKC,UAAU,cAAcF,MAAO,CAACG,SAAU,QAASC,aAAc,UAAtE,oBAGA,kBAAC,IAAD,CACI7B,SAAUW,KAAKX,SACf8B,oBAAkB,GAClB,yBAAKL,MAAO,CAACM,QAAS,OAAQC,eAAgB,WAC1C,kBAAC,IAAKC,KAAN,CACAC,MAAM,OACNC,KAAK,UACLC,MAAO,CACH,CACIC,KAAM,MACNC,QAAS,qCAGb,kBAAC,IAAD,CAAOC,YAAY,qBAAqBd,MAAO,CAAChB,MAAO,OAAQF,aAAc,YAKrF,6BACI,+BAAQ8B,KAAK,WAAb,qBAA4B,UAA5B,0BAAgD,gBAAhD,aACJ,6BACA,6BACClB,GAGD,yBAAKQ,UAAU,cAAcF,MAAO,CAAChB,MAAO,MAAOD,OAAQ,SAA3D,8RAMA,yBAAKiB,MAAO,CAACM,QAAS,OAAQC,eAAgB,WAC1C,kBAAC,IAAD,CAAQK,KAAK,UAAUG,QAAS7B,KAAKjB,MAAM+C,KAAMhB,MAAOnB,GAAxD,YAEA,kBAAC,IAAD,CAAQ+B,KAAK,UAAUG,QAAS7B,KAAKjB,MAAMgD,KAAMjB,MAAOnB,GAAxD,oB,GAxEQqC,IAAMC","file":"static/js/172.18459bc2.chunk.js","sourcesContent":["import React from \"react\"\nimport {Button, Form, Input} from \"antd\"\nimport \"../Questions.css\"\n\nfunction embedSpotify(link) {\n    var linkArr = link.split('/')\n    var embedStr = \"embed/\"\n    linkArr[3] = embedStr.concat(linkArr[3])\n\n    console.log(linkArr[3])\n\n    return linkArr.join(\"/\")\n}\n\nexport default class Q7 extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          spotifyLink: \"default\"\n            \n        }\n    }\n\n    saveData = values => {\n        localStorage.setItem(\"spotify\", values.spotify);\n    };\n\n\n    onFinish = values => {\n        console.log('Success:', values.spotify);\n        this.setState({ spotifyLink: values.spotify })\n    };\n\n    render() {\n\n        const navButton = {\n            borderRadius: \"10px\",\n            margin: \"10px\",\n            width: \"100px\"\n        }\n\n        let songLink = this.state.spotifyLink\n        console.log(songLink)\n        let newLink = embedSpotify(this.state.spotifyLink)\n        const linkFrame = (this.state.spotifyLink === \"default\" ? <br/> : <iframe src={newLink} width=\"300\" height=\"380\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>)\n\n        return (\n            <div style={{width: \"100%\", textAlign: \"center\"}}>\n                <div className=\"create-text\" style={{fontSize: \"1.5em\", marginBottom: \"0.5em\"}}>\n                    Add a soundtrack\n                </div>\n                <Form\n                    onFinish={this.onFinish}\n                    scrollToFirstError>\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Form.Item \n                        label=\"Link\"\n                        name=\"spotify\"\n                        rules={[\n                            {\n                                type: \"url\",\n                                message: \"This field must be a valid url.\"\n                            }\n                        ]}>\n                            <Input placeholder=\"Spotify Track Link\" style={{width: \"15em\", borderRadius: \"10px\"}}/>\n                           \n                        </Form.Item>\n                    </div>\n                \n                    <br />\n                        <button type=\"primary\" type=\"submit\" className= \"upload-small\">Upload</button>\n                    <br />\n                    <div>\n                    {linkFrame}\n                    </div>\n\n                    <div className=\"create-text\" style={{width: \"60%\", margin: \"auto\"}}>\n                    To find the link of a Spotify Song or Playlist, open up Spotify on your computer and search up the song/playlist \n                    that you would like to upload. Click on the \"...\", then press \"share\" and \"copy playlist/song link\". You can now copy the link into\n                    the input box above and hit \"upload\".\n                    </div>\n\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Button type=\"primary\" onClick={this.props.prev} style={navButton}>Previous</Button>\n                    \n                        <Button type=\"primary\" onClick={this.props.next} style={navButton}>Skip/Next</Button>\n                    </div>\n                </Form>\n            </div>);\n    }\n}\n"],"sourceRoot":""}