{"version":3,"sources":["views/Questions/Sections/Q12.jsx"],"names":["toast","configure","Q12","handleToken","token","addresses","a","console","log","jwt","localStorage","getItem","config","headers","Authorization","axios","post","constants","response","message","data","type","props","next","style","width","textAlign","className","fontSize","marginBottom","fontStyle","display","justifyContent","this","stripeKey","amount","name","description","image","billingAddress","shippingAddress","onClick","prev","borderRadius","margin","React","Component"],"mappings":"4SAWAA,IAAMC,Y,IAEeC,E,4MAEjBC,Y,uCAAc,WAAMC,EAAOC,GAAb,qBAAAC,EAAA,6DAEVC,QAAQC,IAAIJ,EAAOC,GAEbI,EAAMC,aAAaC,QAAQ,SAC3BC,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYL,KAGjCF,QAAQC,IAAI,UAAYC,GAVd,SAWaM,IAAMC,KACzBC,cAAsB,oBACtB,CAAEb,SAASQ,GAbL,OAWJM,EAXI,OAgBFC,EAAYD,EAASE,KAArBD,QACRZ,QAAQC,IAAI,YAAaW,GACT,YAAZA,GACAnB,YAAM,mCAAoC,CAAEqB,KAAM,YAClD,EAAKC,MAAMC,QAEXvB,YAAM,uBAAwB,CAAEqB,KAAM,UAtBhC,4C,+GAoCV,OACI,yBAAKG,MAAO,CAACC,MAAO,OAAQC,UAAW,WACnC,yBAAKC,UAAU,cAAcH,MAAO,CAACI,SAAU,QAASC,aAAc,UAAtE,gCAGA,yBAAKF,UAAU,cAAcH,MAAO,CAACM,UAAW,SAAUF,SAAU,QAApE,gCAGA,6BACA,yBAAKJ,MAAO,CAACO,QAAS,OAAQC,eAAgB,WAC1C,kBAAC,IAAD,CACI5B,MAAO6B,KAAK9B,YACZ+B,UAAWjB,oBACXkB,OAAQ,IACRC,KAAK,yBACLC,YAAY,4BACZC,MAAM,eACNC,gBAAc,EACdC,iBAAe,GAEnB,4BAAQnB,KAAK,UAAUM,UAAU,UAAjC,mBAGJ,yBAAKH,MAAO,CAACO,QAAS,OAAQC,eAAgB,WAC1C,kBAAC,IAAD,CAAQX,KAAK,UAAUoB,QAASR,KAAKX,MAAMoB,KAAMlB,MA9B3C,CACdmB,aAAc,OACdC,OAAQ,OACRnB,MAAO,UA2BC,c,GA9DaoB,IAAMC","file":"static/js/168.e1a1a2d1.chunk.js","sourcesContent":["import React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {Button, notification} from \"antd\";\nimport * as constants from \"../../../constants\";\nimport \"../Questions.css\"\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\ntoast.configure();\n\nexport default class Q12 extends React.Component {\n\n    handleToken = async(token, addresses) => {\n\n        console.log(token, addresses )\n\n        const jwt = localStorage.getItem(\"token\");\n        const config = {\n            headers: {\n                Authorization: `Bearer ${jwt}`,\n            }\n        }\n        console.log(\"token: \" + jwt)\n        const response = await axios.post(\n            constants.REMOTE_HOST+\"/payment/checkout\",\n            { token }, config\n\n        );\n        const { message } = response.data;\n        console.log(\"Response:\", message);\n        if (message === \"success\") {\n            toast(\"Success! Check email for details\", { type: \"success\" });\n            this.props.next();\n        } else {\n            toast(\"Something went wrong\", { type: \"error\" });\n        }\n\n    };\n\n\n    render() {\n\n        const navButton = {\n            borderRadius: \"10px\",\n            margin: \"20px\",\n            width: \"100px\"\n        }\n\n        return (\n            <div style={{width: \"100%\", textAlign: \"center\"}}>\n                <div className=\"create-text\" style={{fontSize: \"1.5em\", marginBottom: \"0.5em\"}}>\n                    Contribute using credit card\n                </div>\n                <div className=\"create-text\" style={{fontStyle: \"italic\", fontSize: \"1em\"}}>\n                    PayPal and Venmo coming soon\n                </div>\n                <br/>\n                <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <StripeCheckout\n                        token={this.handleToken}\n                        stripeKey={constants.STRIPE_PUBLIC_KEY}\n                        amount={5000} // cents\n                        name=\"RestEasy Memorial Page\"\n                        description=\"Create a digital memorial\"\n                        image=\"/logo196.png\" // the pop-in header image (default none)\n                        billingAddress\n                        shippingAddress\n                    > \n                    <button type=\"primary\" className=\"upload\">Pay With Card</button>\n                    </StripeCheckout>\n                </div>\n                <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <Button type=\"primary\" onClick={this.props.prev} style={navButton}>Back</Button>\n                </div>\n            </div>);\n    }\n}\n"],"sourceRoot":""}